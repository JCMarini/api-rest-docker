plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.2'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.sonarqube' version '6.0.1.5171'
	id 'jacoco'
}

group = 'com.jcmc.demo'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

// Configuraci칩n de JaCoCo
jacoco {
	toolVersion = "0.8.7" // Usa la versi칩n m치s reciente de JaCoCo
}

jacocoTestReport {
	dependsOn test // Dependencia de ejecuci칩n de tests antes de generar el informe
	reports {
		xml.required = true
		html.required = true
		html.destination = file("${buildDir}/jacocoHtml")
		xml.destination = file("${buildDir}/jacocoTestReport.xml")
	}
}

sonarqube {
	properties {
		property "sonar.projectKey", project.findProperty("sonar.projectKey")
		property "sonar.projectName", project.findProperty("sonar.projectName")
		property "sonar.projectVersion", project.findProperty("sonar.projectVersion")
		property "sonar.host.url", project.findProperty("sonar.host.url")
		property "sonar.token",  project.findProperty("sonar.token")
		property "sonar.sources", project.findProperty("sonar.sources")
		property "sonar.tests",  project.findProperty("sonar.tests")
		property("sonar.java.binaries", project.findProperty("sonar.java.binaries"))
		property("sonar.jacoco.reportPaths", project.findProperty("sonar.jacoco.reportPaths"))
	}
}

configurations {
	all {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}
}


dependencies {

	compileOnly 'org.projectlombok:lombok:1.18.24'
	annotationProcessor 'org.projectlombok:lombok:1.18.24'

	implementation('org.springframework.boot:spring-boot-starter:3.4.2') {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}
	implementation 'org.springframework.boot:spring-boot-starter-log4j2:3.4.2'
	implementation 'org.springframework.boot:spring-boot-starter-web:3.4.2'
	implementation 'org.springframework.boot:spring-boot-starter-security:3.4.2'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.4.2'
	implementation 'org.hibernate.orm:hibernate-core:6.6.5.Final'
	implementation 'com.mysql:mysql-connector-j:9.2.0'
	implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
	implementation 'io.jsonwebtoken:jjwt-impl:0.12.6'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.12.6'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}

	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}


// Tarea para eliminar la carpeta de logs
task cleanLogs(type: Delete) {
	delete 'logs/'
}

clean.dependsOn cleanLogs